//31
// Base class Person
class Person {
    String name;
    int age;

    // Constructor
    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }
}

// Derived class Employee
class Employee extends Person {
    int employeeId;
    double salary;

    // Constructor
    public Employee(String name, int age, int employeeId, double salary) {
        super(name, age); // call to Person constructor
        this.employeeId = employeeId;
        this.salary = salary;
    }

    // Method to display employee details
    public void displayDetails() {
        System.out.println("Employee Details:");
        System.out.println("Name: " + name);
        System.out.println("Age: " + age);
        System.out.println("Employee ID: " + employeeId);
        System.out.println("Salary: â‚¹" + salary);
        System.out.println("-----------------------------");
    }
}

// Base class Vehicle
class Vehicle {
    public void start() {
        System.out.println("Vehicle is starting...");
    }
}

// Derived class Car
class Car extends Vehicle {
    @Override
    public void start() {
        System.out.println("Car is starting with key ignition...");
    }
}

// Derived class Bike
class Bike extends Vehicle {
    @Override
    public void start() {
        System.out.println("Bike is starting with self-start...");
    }
}

public class Main {
    public static void main(String[] args) {
        // Task 1: Create Employee object and display details
        Employee emp = new Employee("Ravi", 30, 1024, 55000.0);
        emp.displayDetails();

        // Task 2: Demonstrate method overriding
        Vehicle myCar = new Car();
        Vehicle myBike = new Bike();

        System.out.println("Vehicle Start Messages:");
        myCar.start();
        myBike.start();
    }
}
